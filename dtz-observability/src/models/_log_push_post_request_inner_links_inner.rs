/*
 * DTZ Observability
 *
 * a generated client for the DTZ Observability API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jens@apimeister.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LogPushPostRequestInnerLinksInner {
    #[serde(rename = "alias", skip_serializing_if = "Option::is_none")]
    pub alias: Option<String>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl LogPushPostRequestInnerLinksInner {
    pub fn new() -> LogPushPostRequestInnerLinksInner {
        LogPushPostRequestInnerLinksInner {
            alias: None,
            url: None,
        }
    }
}


