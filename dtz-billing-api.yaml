openapi: 3.1.0
info:
  title: DTZ Billing Api
  version: 2.1.0
  description: a generated client for the DTZ Billing API
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Jens Walter
    email: jens@apimeister.com
servers:
- url: https://billing.dtz.rocks/api/{version}
  variables:
    version:
      default: "2022-12-28"
      enum:
        - "2022-12-28"
paths:
  /stats:
    get:
      summary: get stats
      operationId: getStats
      responses:
        200:
          description: success
          content:
            application/json: 
              schema:
                type: object  
                properties:
                  lastUpdated:
                    type: string
                    format: date-time
                  balance:
                    type: object
                    properties:
                      euro:
                        type: number
                  previousDay:
                    type: object
                    properties:
                      euro:
                        type: number
                      watt:
                        type: number
                  previousWeek:
                    type: object
                    properties:
                      euro:
                        type: number
                      watt:
                        type: number
                  overall:
                    type: object
                    properties:
                      euro:
                        type: number
                      watt:
                        type: number
  /funded:
    get:
      summary: check if identity is funded
      operationId: checkFunded
      parameters:
        - name: identity
          in: query
          required: false
          schema:
            type: string
            format: identity
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  isFunded:
                    type: boolean
  /transaction:
    get:
      summary: get a transaction listing of all incoming and outgoing charges
      operationId: listTransactions
      parameters: 
        - name: start
          description: filter timeframe from that date
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: end
          description: filter timeframe to that date
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: service
          description: filter by service
          in: query
          required: false
          schema:
            type: string
        - name: contextId
          description: filter by context id
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json: 
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
  /consumption:
    post:
      summary: post new service consumption
      description: |
        post new service consumption
        This endpoint cannot be used with service credentials. Only system credentials can update service consumption.
      operationId: postConsumption
      requestBody:
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Consumption'
      responses:
        200:
          description: success
  /charge/stripe:
    post:
      summary: stripe webhook
      description: |
        stripe webhook
        This endpoint cannot be used with service credentials. Only system credentials can update charge information.
      responses:
        200:
          description: success
components:
  schemas:
    Transaction:
      type: object
      properties:
        service:
          type: string
        contextId:
          type: string
        ts:
          type: string
        amountMoney:
          type: number
    Consumption:
      type: object
      properties:
        service:
          type: string
        contextId:
          type: string
          format: ContextId
        description:
          type: string
        intervalStart:
          type: string
          format: date-time
        intervalEnd:
          type: string
          format: data-time
        values:
          type: array
          items:
            $ref: '#/components/schemas/ConsumptionValue'
      required:
        - service
        - contextId
        - values
        - intervalStart
        - intervalEnd
    ConsumptionValue:
      type: object
      properties:
        description:
          type: string
        ecoMode:
          type: boolean
        amount:
          type: number
        unitOfAmount:
          type: string
          enum:
            - "GbSeconds"
            - "Requests"
            - "MilliSeconds"
            - "Watt"
            - "Euro"
        deduplicationKey:
          type: string
      required:
        - amount
        - unitOfAmount
        - deduplicationKey
  securitySchemes:
    dtz_auth:
      type: apiKey
      in: header
      name: X-API-KEY
    dtz_auth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://identity.dtz.rocks/api/2021-02-21/token/auth
          scopes:
            dummy:dummy: dummy
security:
  - dtz_auth: []
  - dtz_auth2: []
