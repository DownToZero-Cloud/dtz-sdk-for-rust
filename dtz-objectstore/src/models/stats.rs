/*
 * DTZ Objectstore
 *
 * a generated client for the DTZ Objectstore API
 *
 * Contact: jens@apimeister.com
 * Generated by: https://openapi-generator.tech
 */

#[allow(unused_imports)]
use crate::models;
#[allow(unused_imports)]
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Stats {
    #[serde(rename = "amountOfObjects", skip_serializing_if = "Option::is_none")]
    pub amount_of_objects: Option<f64>,
    #[serde(rename = "amountOfStorage", skip_serializing_if = "Option::is_none")]
    pub amount_of_storage: Option<f64>,
}

impl Stats {
    pub fn new() -> Stats {
        Stats {
            amount_of_objects: None,
            amount_of_storage: None,
        }
    }
}

