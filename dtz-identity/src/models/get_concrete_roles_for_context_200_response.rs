/*
 * DTZ Identity
 *
 * a generated client for the DTZ Identity API
 *
 * Contact: jens@apimeister.com
 * Generated by: https://openapi-generator.tech
 */

#[allow(unused_imports)]
use crate::models;
#[allow(unused_imports)]
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetConcreteRolesForContext200Response {
    #[serde(rename = "roles", skip_serializing_if = "Option::is_none")]
    pub roles: Option<Vec<models::ContextRole>>,
}

impl GetConcreteRolesForContext200Response {
    pub fn new() -> GetConcreteRolesForContext200Response {
        GetConcreteRolesForContext200Response {
            roles: None,
        }
    }
}

