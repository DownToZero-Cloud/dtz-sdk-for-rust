/*
 * DTZ Identity
 *
 * a generated client for the DTZ Identity API
 *
 * The version of the OpenAPI document: 1.0.19
 * Contact: jens@apimeister.com
 * Generated by: https://openapi-generator.tech
 */

#[allow(unused)]
use crate::models;




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ListAuthentication200ResponseApiKeyAuthInner {
    #[serde(rename = "apiKey", skip_serializing_if = "Option::is_none")]
    pub api_key: Option<String>,
    #[serde(rename = "defaultContextId", skip_serializing_if = "Option::is_none")]
    pub default_context_id: Option<dtz_identifier::ContextId>,
    #[serde(rename = "alias", skip_serializing_if = "Option::is_none")]
    pub alias: Option<String>,
}

impl ListAuthentication200ResponseApiKeyAuthInner {
    pub fn new() -> ListAuthentication200ResponseApiKeyAuthInner {
        ListAuthentication200ResponseApiKeyAuthInner {
            api_key: None,
            default_context_id: None,
            alias: None,
        }
    }
}


