/*
 * DTZ Identity
 *
 * a generated client for the DTZ Identity API
 *
 * Contact: jens@apimeister.com
 * Generated by: https://openapi-generator.tech
 */

#[allow(unused_imports)]
use crate::models;
#[allow(unused_imports)]
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChangeAuthenticationRequest {
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "oldPassword", skip_serializing_if = "Option::is_none")]
    pub old_password: Option<String>,
    #[serde(rename = "newPassword", skip_serializing_if = "Option::is_none")]
    pub new_password: Option<String>,
    #[serde(rename = "defaultContextId", skip_serializing_if = "Option::is_none")]
    pub default_context_id: Option<dtz_identifier::ContextId>,
}

impl ChangeAuthenticationRequest {
    pub fn new(email: String) -> ChangeAuthenticationRequest {
        ChangeAuthenticationRequest {
            email,
            old_password: None,
            new_password: None,
            default_context_id: None,
        }
    }
}

