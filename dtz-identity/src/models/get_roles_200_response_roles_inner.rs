/*
 * DTZ Identity
 *
 * a generated client for the DTZ Identity API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jens@apimeister.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetRoles200ResponseRolesInner {
    #[serde(rename = "roleId", skip_serializing_if = "Option::is_none")]
    pub role_id: Option<uuid::Uuid>,
    #[serde(rename = "roleAlias", skip_serializing_if = "Option::is_none")]
    pub role_alias: Option<String>,
    #[serde(rename = "roleScope", skip_serializing_if = "Option::is_none")]
    pub role_scope: Option<String>,
    #[serde(rename = "contextId", skip_serializing_if = "Option::is_none")]
    pub context_id: Option<uuid::Uuid>,
    #[serde(rename = "exposure", skip_serializing_if = "Option::is_none")]
    pub exposure: Option<String>,
    #[serde(rename = "assignedToUser", skip_serializing_if = "Option::is_none")]
    pub assigned_to_user: Option<bool>,
}

impl GetRoles200ResponseRolesInner {
    pub fn new() -> GetRoles200ResponseRolesInner {
        GetRoles200ResponseRolesInner {
            role_id: None,
            role_alias: None,
            role_scope: None,
            context_id: None,
            exposure: None,
            assigned_to_user: None,
        }
    }
}


