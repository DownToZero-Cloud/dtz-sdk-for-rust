/*
 * DTZ Identity
 *
 * a generated client for the DTZ Identity API
 *
 * The version of the OpenAPI document: 1.0.26
 * Contact: jens@apimeister.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ListAvailableContexts200ResponseInner {
    #[serde(rename = "contextId", skip_serializing_if = "Option::is_none")]
    pub context_id: Option<dtz_identifier::ContextId>,
}

impl ListAvailableContexts200ResponseInner {
    pub fn new() -> ListAvailableContexts200ResponseInner {
        ListAvailableContexts200ResponseInner {
            context_id: None,
        }
    }
}

