/*
 * DTZ Billing Api
 *
 * a generated client for the DTZ Billing API
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: jens@apimeister.com
 * Generated by: https://openapi-generator.tech
 */

#[allow(unused_imports)]
use crate::models;
#[allow(unused_imports)]
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetStats200Response {
    #[serde(rename = "lastUpdated", skip_serializing_if = "Option::is_none")]
    pub last_updated: Option<String>,
    #[serde(rename = "balance", skip_serializing_if = "Option::is_none")]
    pub balance: Option<Box<models::GetStats200ResponseBalance>>,
    #[serde(rename = "previousDay", skip_serializing_if = "Option::is_none")]
    pub previous_day: Option<Box<models::GetStats200ResponsePreviousDay>>,
    #[serde(rename = "previousWeek", skip_serializing_if = "Option::is_none")]
    pub previous_week: Option<Box<models::GetStats200ResponsePreviousDay>>,
    #[serde(rename = "overall", skip_serializing_if = "Option::is_none")]
    pub overall: Option<Box<models::GetStats200ResponsePreviousDay>>,
}

impl GetStats200Response {
    pub fn new() -> GetStats200Response {
        GetStats200Response {
            last_updated: None,
            balance: None,
            previous_day: None,
            previous_week: None,
            overall: None,
        }
    }
}

