/*
 * DTZ Container Registry
 *
 * a generated client for the DTZ Container Registry API
 *
 * Contact: jens@apimeister.com
 * Generated by: https://openapi-generator.tech
 */

#[allow(unused_imports)]
use crate::models;
#[allow(unused_imports)]
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ManifestResponseManifestsInner {
    #[serde(rename = "mediaType", skip_serializing_if = "Option::is_none")]
    pub media_type: Option<String>,
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i32>,
    #[serde(rename = "digest", skip_serializing_if = "Option::is_none")]
    pub digest: Option<String>,
    #[serde(rename = "platform", skip_serializing_if = "Option::is_none")]
    pub platform: Option<serde_json::Value>,
}

impl ManifestResponseManifestsInner {
    pub fn new() -> ManifestResponseManifestsInner {
        ManifestResponseManifestsInner {
            media_type: None,
            size: None,
            digest: None,
            platform: None,
        }
    }
}

