/*
 * DTZ Core Api
 *
 * a generated client for the DTZ Core API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: jens@apimeister.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateIngressRequestStaticContent {
    #[serde(rename = "scheme", skip_serializing_if = "Option::is_none")]
    pub scheme: Option<String>,
    #[serde(rename = "header", skip_serializing_if = "Option::is_none")]
    pub header: Option<Vec<models::CreateIngressRequestStaticContentHeaderInner>>,
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<String>,
}

impl CreateIngressRequestStaticContent {
    pub fn new() -> CreateIngressRequestStaticContent {
        CreateIngressRequestStaticContent {
            scheme: None,
            header: None,
            content: None,
        }
    }
}


