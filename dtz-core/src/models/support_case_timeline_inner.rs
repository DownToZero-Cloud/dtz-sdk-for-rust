/*
 * DTZ Core Api
 *
 * a generated client for the DTZ Core API
 *
 * Contact: jens@apimeister.com
 * Generated by: https://openapi-generator.tech
 */

#[allow(unused)]
use crate::models;




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SupportCaseTimelineInner {
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<String>,
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<String>,
    #[serde(rename = "identityId", skip_serializing_if = "Option::is_none")]
    pub identity_id: Option<dtz_identifier::IdentityId>,
}

impl SupportCaseTimelineInner {
    pub fn new() -> SupportCaseTimelineInner {
        SupportCaseTimelineInner {
            created: None,
            content: None,
            identity_id: None,
        }
    }
}


