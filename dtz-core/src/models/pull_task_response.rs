/*
 * DTZ Core Api
 *
 * a generated client for the DTZ Core API
 *
 * Contact: jens@apimeister.com
 * Generated by: https://openapi-generator.tech
 */

#[allow(unused_imports)]
use crate::models;
#[allow(unused_imports)]
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PullTaskResponse {
    #[serde(rename = "contextId")]
    pub context_id: dtz_identifier::ContextId,
    #[serde(rename = "executionId")]
    pub execution_id: dtz_identifier::ExecutionId,
    #[serde(rename = "taskId")]
    pub task_id: dtz_identifier::TaskId,
    #[serde(rename = "taskName")]
    pub task_name: String,
    #[serde(rename = "containerImage")]
    pub container_image: String,
    #[serde(rename = "containerPullUser", skip_serializing_if = "Option::is_none")]
    pub container_pull_user: Option<String>,
    #[serde(rename = "containerPullPwd", skip_serializing_if = "Option::is_none")]
    pub container_pull_pwd: Option<String>,
    #[serde(rename = "envVariables", skip_serializing_if = "Option::is_none")]
    pub env_variables: Option<std::collections::HashMap<String, models::EnvironmentVariablesValue>>,
}

impl PullTaskResponse {
    pub fn new(context_id: dtz_identifier::ContextId, execution_id: dtz_identifier::ExecutionId, task_id: dtz_identifier::TaskId, task_name: String, container_image: String) -> PullTaskResponse {
        PullTaskResponse {
            context_id,
            execution_id,
            task_id,
            task_name,
            container_image,
            container_pull_user: None,
            container_pull_pwd: None,
            env_variables: None,
        }
    }
}

